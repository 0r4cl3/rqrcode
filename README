= rQRCode, Encode QRCodes

rQRCode is a library for encoding QR Codes in Ruby. It has a simple interface with all the standard qrcode options. It was adapted from the Javascript library by Kazuhiko Arase.

= An Overview

Let's clear up some rQRCode stuff.

# rQRCode is a *standalone library*. It requires no other libraries. Just Ruby!
# It is an encoding library. You can't decode QR codes with it.
# The interface is simple and assumes you just want to encode a string into a QR code
# QR code is trademarked by Denso Wave inc

= Rescources

# wikipedia [http://en.wikipedia.org/wiki/QR_Code]
# Denso-Wave website [http://www.denso-wave.com/qrcode/index-e.html]
# kaywa [http://qrcode.kaywa.com/]


== Installing

You may get the latest stable version from Rubyforge. Source gems are also available.

  $ gem install rqrcode

=== Loading rQRCode Itself

You have installed the gem already, yeah?

 require 'rubygems'
 require 'qrqcode'

=== Simple QRCode generation to screen

 # QRCode.new( string [, :size, :level] ) 
 # defaults :size => 4, :level => :h
 #
 qr = RQRCode::QRCode.new( 'my string to generate', :size => 4, :level => :h )
 qr.to_console

=== Simple QRCode generation to view (RubyOnRails)

controller:
 @qr = RQRCode::QRCode.new( 'my string to generate', :size => 4, :level => :h )

view: (minimal styling added)
<style type="text/css">
table {
  border-width: 0;
  border-style: none;
  border-color: #0000ff;
  border-collapse: collapse;
}
td {
  border-width: 0; 
  border-style: none;
  border-color: #0000ff; 
  border-collapse: collapse; 
  padding: 0; 
  margin: 0; 
  width: 10px; 
  height: 10px; 
}
td.black { background-color: #000; }
td.white { background-color: #fff; }
</style>

<table>
<% (0...@qr.module_count).each do |x| %>
  <tr>  
  <% (0...@qr.module_count).each do |y| %>
    <% if @qr.is_dark(x,y) %>
		<td class="black"/>
    <% else %>
		<td class="white"/>
    <% end %>
  <% end %>
  </tr>
<% end %>
</table>
